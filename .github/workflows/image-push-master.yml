name: Image push for master
on: 
  push:
    branches:
      - master
env:
  image-push-owner: 'navrockclimber'
  lowercase-repo-name: 'navrockclimber/multus-cni'
jobs:
  push-thick-amd64:
    name: Image push thick image/amd64
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        if: ${{ github.repository_owner == env.image-push-owner }}
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push container image for thick plugin
        if: ${{ github.repository_owner == env.image-push-owner }}
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ env.lowercase-repo-name }}:latest-thick
            ghcr.io/${{ env.lowercase-repo-name }}:snapshot-thick
          file: images/Dockerfile.thick
          platforms: linux/amd64,linux/arm64,linux/arm/v7

  push-thin:
    name: Image push thin image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        if: ${{ github.repository_owner == env.image-push-owner }}
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push thin container image
        if: ${{ github.repository_owner == env.image-push-owner }}
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ env.lowercase-repo-name }}:latest
            ghcr.io/${{ env.lowercase-repo-name }}:snapshot
          file: images/Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/ppc64le,linux/s390x
          sbom: false
          provenance: false

      - name: Push thin container debug image
        if: ${{ github.repository_owner == env.image-push-owner }}
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ env.lowercase-repo-name }}:latest-debug
            ghcr.io/${{ env.lowercase-repo-name }}:snapshot-debug
          file: images/Dockerfile.debug
          platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/ppc64le,linux/s390x
          sbom: false
          provenance: false

# TODO: need to fix this action
#  push-origin:
#    name: Image push/origin
#    runs-on: ubuntu-latest
#    steps:
#      - name: Check out code into the Go module directory
#        uses: actions/checkout@v3
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#
#      - name: Login to GitHub Container Registry
#        if: github.repository_owner == 'k8snetworkplumbingwg'
#        uses: docker/login-action@v2
#        with:
#          registry: ghcr.io
#          username: ${{ github.repository_owner }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#
#      - name: Push container image
#        if: github.repository_owner == 'k8snetworkplumbingwg'
#        uses: docker/build-push-action@v3
#        with:
#          context: .
#          push: true
#          tags: |
#            ghcr.io/${{ github.repository }}:latest-origin
#            ghcr.io/${{ github.repository }}:snapshot-origin
#          file: images/Dockerfile.openshift

  push-manifest:
    needs: [push-thick-amd64]
    runs-on: ubuntu-latest
    env:
      REPOSITORY: ghcr.io/${{ github.repository }}
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        if: github.repository_owner == env.image-push-owner
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create manifest for multi-arch images
        if: github.repository_owner == env.image-push-owner
        run: |
          # snapshot
          # get artifacts from previous steps
          docker pull ${{ env.lowercase-repo-name }}:snapshot-amd64
          docker pull ${{ env.lowercase-repo-name }}:snapshot-arm64
          docker pull ${{ env.lowercase-repo-name }}:snapshot-arm32
          docker pull ${{ env.lowercase-repo-name }}:snapshot-ppc64le
          docker pull ${{ env.lowercase-repo-name }}:snapshot-s390x
          docker manifest create ${{ env.lowercase-repo-name }}:snapshot ${{ env.lowercase-repo-name }}:snapshot-amd64 ${{ env.lowercase-repo-name }}:snapshot-arm64 ${{ env.lowercase-repo-name }}:snapshot-arm32 ${{ env.lowercase-repo-name }}:snapshot-ppc64le ${{ env.lowercase-repo-name }}:snapshot-s390x
          docker manifest annotate ${{ env.lowercase-repo-name }}:snapshot ${{ env.lowercase-repo-name }}:snapshot-amd64 --arch amd64
          docker manifest annotate ${{ env.lowercase-repo-name }}:snapshot ${{ env.lowercase-repo-name }}:snapshot-arm64 --arch arm64
          docker manifest annotate ${{ env.lowercase-repo-name }}:snapshot ${{ env.lowercase-repo-name }}:snapshot-arm32 --arch arm
          docker manifest annotate ${{ env.lowercase-repo-name }}:snapshot ${{ env.lowercase-repo-name }}:snapshot-ppc64le --arch ppc64le
          docker manifest annotate ${{ env.lowercase-repo-name }}:snapshot ${{ env.lowercase-repo-name }}:snapshot-s390x --arch s390x
          docker manifest push ${{ env.lowercase-repo-name }}:snapshot

          # latest
          # get artifacts from previous steps
          docker pull ${{ env.lowercase-repo-name }}:latest-amd64
          docker pull ${{ env.lowercase-repo-name }}:latest-arm64
          docker pull ${{ env.lowercase-repo-name }}:latest-arm32
          docker pull ${{ env.lowercase-repo-name }}:latest-ppc64le
          docker pull ${{ env.lowercase-repo-name }}:latest-s390x

          docker manifest create ${{ env.lowercase-repo-name }}:latest ${{ env.lowercase-repo-name }}:latest-amd64 ${{ env.lowercase-repo-name }}:latest-arm64 ${{ env.lowercase-repo-name }}:latest-arm32 ${{ env.lowercase-repo-name }}:latest-ppc64le ${{ env.lowercase-repo-name }}:latest-s390x
          docker manifest annotate ${{ env.lowercase-repo-name }}:latest ${{ env.lowercase-repo-name }}:latest-amd64 --arch amd64
          docker manifest annotate ${{ env.lowercase-repo-name }}:latest ${{ env.lowercase-repo-name }}:latest-arm64 --arch arm64
          docker manifest annotate ${{ env.lowercase-repo-name }}:latest ${{ env.lowercase-repo-name }}:latest-arm32 --arch arm
          docker manifest annotate ${{ env.lowercase-repo-name }}:latest ${{ env.lowercase-repo-name }}:latest-ppc64le --arch ppc64le
          docker manifest annotate ${{ env.lowercase-repo-name }}:latest ${{ env.lowercase-repo-name }}:latest-s390x --arch s390x
          docker manifest push ${{ env.lowercase-repo-name }}:latest
